version: '3.8'
services:
    dev_api:
        container_name: dev_api_nestjs
        image: dev-api-nestjs:1.0.0
        build:
            context: .
            target: development
            dockerfile: Dockerfile # On Mac M1, update to point to file ./Dockerfile
        command: yarn start:dev
        ports:
            - ${API_HOST_PORT}:${API_CONTAINER_PORT}
        networks:
            - api-network
            - api-redis-network
            - api-postgres-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules 
        env_file:
            - .env
        environment: #overwite environment variables when running API with docker container.
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER_NAME}:${POSTGRES_CONTAINER_PORT}/${POSTGRES_DB}?schema=api # note the api container has to use postgres internal port and internal hostname, it can't localhost with external port.
            REDIS_HOST: ${REDIS_CONTAINER_NAME} # note that the api has to use redis host name in container, it can't use localhost to access the redis in container
            REDIS_HOST_PORT: ${REDIS_CONTAINER_PORT}
        restart: unless-stopped
        depends_on:
            - dev_api_postgres
            - dev_api_redis
    dev_api_postgres:
        image: postgres:13.5
        container_name: ${POSTGRES_CONTAINER_NAME}
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - dev-api-postgres:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
        networks:
            - api-postgres-network
        depends_on:
            - dev_api_redis
    test_api_postgres:
        image: postgres:13.5
        container_name: ${POSTGRES_CONTAINER_NAME}
        restart: always
        env_file:
            - .env.test
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
        networks:
            - api-postgres-network
        depends_on:
            - test_api_redis
    dev_api_redis:
        container_name: ${REDIS_CONTAINER_NAME}
        restart: always
        image: redis:alpine
        env_file:
            - .env.test
        ports:
            - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
        command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
        volumes:
            - dev-api-redis:/var/lib/redis/data
        networks:
            - api-redis-network
    test_api_redis:
        container_name: ${REDIS_CONTAINER_NAME}
        restart: always
        image: redis:alpine
        env_file:
            - .env
        ports:
            - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
        command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
        networks:
            - api-redis-network
volumes:
    dev-api-postgres:
    dev-api-redis:
networks:
    api-network:
    api-redis-network:
    api-postgres-network:
