// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPERADMIN
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique @db.VarChar(64)
  hash  String @db.VarChar(255)

  firstName String? @db.VarChar(32)
  lastName  String? @db.VarChar(32)

  tokens Token[]
  role   UserRole @default(USER)
  posts  Post[]

  @@map("users")
}

model Token {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshTokenSha1 String @db.VarChar(40)
  userId           Int
  user             User   @relation(fields: [userId], references: [id])

  @@map("tokens")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String  @db.VarChar(255)
  description String?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  tags Tag[]

  @@map("posts")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique @db.VarChar(255)

  posts Post[]

  @@map("categories")
}

model Tag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique @db.VarChar(255)

  posts Post[]

  @@map("tags")
}
